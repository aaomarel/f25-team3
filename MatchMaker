# Software Requirements Specification
## For Match Maker

Version 0.1  
Prepared by Ahmed and Keith
CSC340  
9/16/2025 

Table of Contents
=================
* [Revision History](#revision-history)
* 1 [Introduction](#1-introduction)
  * 1.1 [Document Purpose](#11-document-purpose)
  * 1.2 [Product Scope](#12-product-scope)
  * 1.3 [Definitions, Acronyms and Abbreviations](#13-definitions-acronyms-and-abbreviations)
  * 1.4 [References](#14-references)
  * 1.5 [Document Overview](#15-document-overview)
* 2 [Product Overview](#2-product-overview)
  * 2.1 [Product Functions](#21-product-functions)
  * 2.2 [Product Constraints](#22-product-constraints)
  * 2.3 [User Characteristics](#23-user-characteristics)
  * 2.4 [Assumptions and Dependencies](#24-assumptions-and-dependencies)
* 3 [Requirements](#3-requirements)
  * 3.1 [Functional Requirements](#31-functional-requirements)
    * 3.1.x [Provider Use Case](#31x-provider-use-case-author-ahmed-omar)
    * 3.1.1 [User Interfaces](#311-user-interfaces)
    * 3.1.2 [Hardware Interfaces](#312-hardware-interfaces)
    * 3.1.3 [Software Interfaces](#313-software-interfaces)
  * 3.2 [Non-Functional Requirements](#32-non-functional-requirements)
    * 3.2.1 [Performance](#321-performance)
    * 3.2.2 [Security](#322-security)
    * 3.2.3 [Reliability](#323-reliability)
    * 3.2.4 [Availability](#324-availability)
    * 3.2.5 [Compliance](#325-compliance)
    * 3.2.6 [Cost](#326-cost)
    * 3.2.7 [Deadline](#327-deadline)

## Revision History
| Name | Date    | Reason For Changes  | Version   |
| ---- | ------- | ------------------- | --------- |
| Ahmed Omar | 9/16/2025 | Initial SRS draft, added provider use case, functional and non-functional requirements, and updated table of contents. | 0.1 |
|      |         |                     |           |
|      |         |                     |           |
|      |         |                     |           |

## 1. Introduction

### 1.1 Document Purpose
This Software Requirements Specification (SRS) defines the requirements for the Match Maker application. It is intended for developers, testers, project stakeholders, and future maintainers of the system.

### 1.2 Product Scope
Match Maker is a web-based application designed to facilitate the creation and organization of pick-up sports matches. The application allows users to create, join, and manage matches for various sports at different locations and times. The goal is to make it easy for individuals to find and participate in local sports activities, promoting community engagement and healthy lifestyles.

### 1.3 Definitions, Acronyms and Abbreviations
| Term      | Definition |
|-----------|------------|
| Provider  | A user who creates and manages pick-up matches |
| Match     | A scheduled pick-up game for a specific sport |
| Player    | A user who joins a match |

### 1.4 References
No external references at this time.

### 1.5 Document Overview
This document is organized into sections covering the introduction, product overview, functional and non-functional requirements, and supporting information for the Match Maker application.

## 2. Product Overview
This section should describe the general factors that affect the product and its requirements. This section does not state specific requirements. Instead, it provides a background for those requirements, which are defined in detail in Section 3, and makes them easier to understand.

### 2.1 Product Functions
* Allow providers to create pick-up matches by specifying sport, location, player capacity, and time of play
* Allow players to browse and join available matches
* Manage user profiles
* Display upcoming and past matches

### 2.2 Product Constraints
* Web-based application, accessible via modern browsers
* User authentication required for creating and joining matches
* Must comply with standard web accessibility guidelines
### 2.3 User Characteristics
* Providers: Users who create and manage pick-up matches
* Players: Users who join and participate in matches

### 2.4 Assumptions and Dependencies
* Users have access to the internet and a modern web browser
* The application will use standard authentication and database services

## 3. Requirements

### 3.1 Functional Requirements 
This section specifies the software product's requirements to a level of detail sufficient for design and testing.
#### 3.1.x Provider Use Case (Author: Ahmed Omar)
**Description:**
Providers are users who can create pick-up matches. They are responsible for specifying the sport, location, player capacity, and time of play for each match.

**Functional Requirements:**
* The system shall allow a provider to create a new pick-up match by entering the sport, location, player capacity, and time of play.
* The system shall require all fields (sport, location, player capacity, time) to be filled before a match can be created.
* The system shall display a confirmation to the provider after successfully creating a match.
* The system shall allow providers to view a list of matches they have created.

#### 3.1.1 User interfaces
The application will provide a web-based user interface for providers and players. Providers will have access to a match creation form with fields for sport, location, player capacity, and time of play. Players will be able to browse and join matches through a searchable list.

#### 3.1.2 Hardware interfaces
No special hardware interfaces are required. The application will run on standard computers and mobile devices with internet access.

#### 3.1.3 Software interfaces
The application will interface with a backend database for storing user and match information, and with authentication services for user login and registration.

### 3.2 Non Functional Requirements 

#### 3.2.1 Performance
* The system shall support at least 100 concurrent users without significant degradation in response time (target: <2 seconds for page loads and form submissions).
* The system shall be optimized for both desktop and mobile browsers.

#### 3.2.2 Security
* The system shall require user authentication for creating and joining matches.
* User passwords shall be stored securely using industry-standard hashing algorithms.
* Sensitive user data shall be transmitted over secure HTTPS connections.

#### 3.2.3 Reliability
* The system shall be available 99% of the time, excluding scheduled maintenance.
* The system shall provide error messages and logging for failed operations.

#### 3.2.4 Availability
* The system shall be accessible 24/7, except during scheduled maintenance windows.
* The system shall provide regular data backups to prevent data loss.

#### 3.2.5 Compliance
* The system shall comply with relevant data privacy laws.
* The system shall follow web accessibility standards.

#### 3.2.6 Cost
* We expect to spend $0 on this project. 

#### 3.2.7 Deadline
* The system shall be delivered by December 2025.